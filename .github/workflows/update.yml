name: Update Spotify Viral 50 Playlist

on:
  schedule:
    - cron: '0 3 * * *'  # 毎日12:00 JST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies for Playwright
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxss1 libxcomposite1 libxrandr2 libgbm-dev wget unzip

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install spotipy pandas python-dotenv playwright
    
    - name: Ensure browsers are installed
      run: |
        playwright install --with-deps

    - name: Restore saved login session
      run: |
        echo "$STATE_JSON" | base64 -d > state.json
      env:
        STATE_JSON: ${{ secrets.STATE_JSON }}

    - name: Run playlist update
      run: python update_playlist_multi.py
      env:
        SPOTIPY_CLIENT_ID: ${{ secrets.SPOTIPY_CLIENT_ID }}
        SPOTIPY_CLIENT_SECRET: ${{ secrets.SPOTIPY_CLIENT_SECRET }}
        SPOTIPY_REDIRECT_URI: ${{ secrets.SPOTIPY_REDIRECT_URI }}
        SPOTIFY_PLAYLIST_ID: ${{ secrets.SPOTIFY_PLAYLIST_ID }}

    - name: Commit debug.zip to repo (as fallback)
      if: failure()
      run: |
        if [ -f debug.png ]; then
          ls -la
          zip debug.zip debug.png
          echo "✅ Zipped debug.png"
          ls -la
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b debug-artifact
          git add debug.zip
          git commit -m "Add debug screenshot"
          git remote show origin > /dev/null 2>&1 || git remote add origin https://github.com/${{ github.repository }}.git
        else
          echo "❌ debug.png not found, skipping zip"
        fi